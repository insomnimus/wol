{
  "name": "main",
  "on": {
    "push": {
      "paths-ignore": [
        "readme.md",
        "LICENSE"
      ]
    },
    "pull_request": {
      "paths-ignore": [
        "readme.md",
        "LICENSE"
      ]
    }
  },
  "jobs": {
    "test": {
      "name": "Test",
      "strategy": {
        "matrix": {
          "target": [
            "x86_64-pc-windows-msvc",
            "i686-pc-windows-msvc",
            "aarch64-pc-windows-msvc"
          ]
        }
      },
      "runs-on": "windows-latest",
      "steps": [
        {
          "name": "checkout",
          "uses": "actions/checkout@v4"
        },
        {
          "name": "rustup",
          "run": "rustup update && rustup target add  ${{ matrix.target }}"
        },
        {
          "name": "build",
          "run": "cargo build --target ${{ matrix.target }}"
        }
      ]
    },
    "build": {
      "name": "Build Release Binaries",
      "needs": "test",
      "if": "github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')",
      "strategy": {
        "matrix": {
          "include": [
            {
              "target": "x86_64-pc-windows-msvc",
              "name": "wol-x64.7z"
            },
            {
              "target": "i686-pc-windows-msvc",
              "name": "wol-x32.7z"
            },
            {
              "target": "aarch64-pc-windows-msvc",
              "name": "wol-arm64.7z"
            }
          ]
        }
      },
      "runs-on": "windows-latest",
      "steps": [
        {
          "name": "checkout",
          "uses": "actions/checkout@v4"
        },
        {
          "name": "setup rustup",
          "run": "rustup default nightly\n rustup target add ${{ matrix.target }}\nrustup component add rust-src --target ${{ matrix.target }}"
        },
        {
          "name": "build",
          "run": "cargo rustc --release --target ${{ matrix.target }} '-Zbuild-std=core,alloc,std,panic_abort' -- -Ccodegen-units=1"
        },
        {
          "name": "archive executable",
          "run": "cd target/${{ matrix.target }}/release\n7z a ../../../${{ matrix.name }} wol.exe\ncd -"
        },
        {
          "name": "upload artifacts",
          "uses": "actions/upload-artifact@v4",
          "with": {
            "name": "${{ matrix.name }}",
            "path": "${{ matrix.name }}"
          }
        }
      ]
    },
    "release": {
      "name": "Create GitHub Release",
      "needs": "build",
      "if": "github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "checkout",
          "uses": "actions/checkout@v4",
          "with": {
            "fetch-depth": 0
          }
        },
        {
          "name": "download artifacts",
          "uses": "actions/download-artifact@v4",
          "with": {
            "path": "./artifacts"
          }
        },
        {
          "name": "create github release",
          "env": {
            "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
          },
          "run": "gh release create ${{ github.ref_name }} ./artifacts/*/* --generate-notes --title ${{ github.ref_name }}"
        }
      ]
    }
  }
}
